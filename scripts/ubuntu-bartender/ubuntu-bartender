#!/bin/bash -e

dependencies="petname git"

for dependency in $dependencies
do
	if ! command -v $dependency &>/dev/null
	then
		echo "error: $dependency was not found in PATH" >&2
		exit 255
	fi
done

UBUNTU_OLD_FASHIONED_REPO=${UBUNTU_OLD_FASHIONED_REPO:-https://github.com/chrisglass/ubuntu-old-fashioned.git}
LIVECD_ROOTFS_REPO=${LIVECD_ROOTFS_REPO:-https://git.launchpad.net/livecd-rootfs}
HOOK_EXTRAS_REPO=${HOOK_EXTRAS_REPO:-}
HOOK_EXTRAS_DIR=${HOOK_EXTRAS_DIR:-}

UBUNTU_OLD_FASHIONED_BRANCH=${UBUNTU_OLD_FASHIONED_BRANCH:-master}
HOOK_EXTRAS_BRANCH=${HOOK_EXTRAS_BRANCH:-}

BUILD_PROVIDER=${BUILD_PROVIDER:-multipass}

SHOULD_CLEANUP=${SHOULD_CLEANUP:-YES}

maybe_series=$(basename $0 | cut -d'-' -f2)
if [ "$maybe_series" != "bartender" ]
then
	series_flag="--series $maybe_series"
	LIVECD_ROOTFS_BRANCH=${LIVECD_ROOTFS_BRANCH:-ubuntu/$maybe_series}
else
	series_flag=""
	LIVECD_ROOTFS_BRANCH=${LIVECD_ROOTFS_BRANCH:-ubuntu/master}
fi

function print-usage {
	cat << EOF >&2
usage: $0 [<options>] -- --series <series> [<ubuntu-old-fashioned-options>]

		--livecd-rootfs-repo <url>							The url to the git repo hosting livecd-rootfs.
																						Value: $LIVECD_ROOTFS_REPO

		--livecd-rootfs-branch <branch>				 The branch of livecd-rootfs to use.
																						Value: $LIVECD_ROOTFS_BRANCH

		--livecd-rootfs-dir <dir>							 A local directory containing livecd-rootfs.
																						Value: ${LIVECD_ROOTFS_DIR:-None}

		--ubuntu-old-fashioned-repo <url>			 The url to the git repo hosting ubuntu-old-fashioned.
																						Value: $UBUNTU_OLD_FASHIONED_REPO

		--ubuntu-old-fashioned-branch <branch>	The branch of ubuntu-old-fashioned to use.
																						Value: $UBUNTU_OLD_FASHIONED_BRANCH

		--ubuntu-old-fashioned-dir <dir>				A local directory containing ubuntu-old-fashioned.
																						Value: ${UBUNTU_OLD_FASHIONED_DIR:-None}

		--hook-extras-repo <url>								The url to a git repo hosting extra hooks.
																						Value: ${HOOK_EXTRAS_REPO:-None}

		--hook-extras-branch <branch>					 The branch of the extras-repo to use.
																						Value: ${HOOK_EXTRAS_BRANCH:-None}

		--hook-extras-dir <dir>								 A local directory containing extra hooks.
																						Value: ${HOOK_EXTRAS_DIR:-None}

		--chroot-archive <archive>							A local archive used to perform the build.
																						Value: ${CHROOT_ARCHIVE:-None}

		--build-provider <provider>						 The provider used to build the image.
																						This can be either multipass or aws.
																						Value: $BUILD_PROVIDER

		--no-cleanup														Don't tear down the build provider
																						after the build completes.
																						Value: Cleanup? $SHOULD_CLEANUP

		--help																	Print this help message.

Options specified after '--' separator are used by Ubuntu Old Fashioned directly.

EOF
}

while [[ $# -gt 0 ]]
do
	case $1 in
		--livecd-rootfs-repo)
			LIVECD_ROOTFS_REPO="$2"
			shift
			;;
		--livecd-rootfs-branch)
			LIVECD_ROOTFS_BRANCH="$2"
			shift
			;;
		--livecd-rootfs-dir)
			LIVECD_ROOTFS_DIR="$2"
			shift
			;;
		--ubuntu-old-fashioned-repo)
			UBUNTU_OLD_FASHIONED_REPO="$2"
			shift
			;;
		--ubuntu-old-fashioned-branch)
			UBUNTU_OLD_FASHIONED_BRANCH="$2"
			shift
			;;
		--ubuntu-old-fashioned-dir)
			UBUNTU_OLD_FASHIONED_DIR="$2"
			shift
			;;
		--hook-extras-repo)
			HOOK_EXTRAS_REPO="$2"
			shift
			;;
		--hook-extras-branch)
			HOOK_EXTRAS_BRANCH="$2"
			shift
			;;
		--hook-extras-dir)
			HOOK_EXTRAS_DIR="$2"
			shift
			;;
		--chroot-archive)
			CHROOT_ARCHIVE="$2"
			shift
			;;
		--build-provider)
			BUILD_PROVIDER="$2"
			shift
			;;
		--no-cleanup)
			SHOULD_CLEANUP=NO
			;;
		--)
			shift
			break
			;;
		--help)
			SHOW_HELP=YES
			;;
		*)
			echo "error: unknown option '$1'" >&2
			exit 255
			;;
	esac
	shift
done

if [ -n "$HOOK_EXTRAS_REPO" ] && [ -n "$HOOK_EXTRAS_DIR" ]
then
	echo "error: cannot specify both --hook-extras-repo and --hook-extras-dir" >&2
	print-usage
	exit 255
fi

if [ "$SHOW_HELP" = "YES" ]
then
	print-usage
	exit 255
fi

build_provider_config="$(dirname "$(readlink -f "$0")")/$BUILD_PROVIDER-provider"
if [ ! -f "$build_provider_config" ]
then
	echo "error: invalid build provider specified: $BUILD_PROVIDER" >&2
	print-usage
	exit 255
fi

source "$build_provider_config"

build-provider-assert-ready

if [ -z "$series_flag" ] && ! echo -- $@ | grep -q -- --series
then
	echo "error: the '--series' option is required by ubuntu-old-fashioned" >&2
	print-usage
	exit 255
fi

temp_dir=$(mktemp --directory)
bartender_name=$(petname)-ubuntu-bartender
drink_name=${bartender_name/-bartender/-on-the-rocks.tar.gz}

function cleanup {
	echo "Cleaning up..."
	rm -rf $temp_dir
	build-provider-destroy $bartender_name
}

if [ "$SHOULD_CLEANUP" = "YES" ]
then
	trap cleanup EXIT
fi

build-provider-create $bartender_name

(
	echo "Preparing ingredients..."

	if [ -n "$HOOK_EXTRAS_DIR" ]
	then
		cp -aR "$HOOK_EXTRAS_DIR" $temp_dir/extras
	fi

	if [ -n "$LIVECD_ROOTFS_DIR" ]
	then
		cp -aR "$LIVECD_ROOTFS_DIR" $temp_dir/livecd-rootfs
	fi

	if [ -n "$UBUNTU_OLD_FASHIONED_DIR" ]
	then
		cp -aR "$UBUNTU_OLD_FASHIONED_DIR" $temp_dir/ubuntu-old-fashioned
	fi

	if [ -n "$CHROOT_ARCHIVE" ]
	then
		cp -aR "$CHROOT_ARCHIVE" $temp_dir/chroot-archive
		chroot_archive_flag="--use-chroot-archive ../chroot-archive"
	fi

	cd $temp_dir

	if [ -z "$UBUNTU_OLD_FASHIONED_DIR" ]
	then
		git clone -qb $UBUNTU_OLD_FASHIONED_BRANCH $UBUNTU_OLD_FASHIONED_REPO
	fi

	if [ -z "$LIVECD_ROOTFS_DIR" ]
	then
		git clone -qb $LIVECD_ROOTFS_BRANCH $LIVECD_ROOTFS_REPO
	fi

	if [ -n "$HOOK_EXTRAS_REPO" ]
	then
		branch_flag=" "
		if [ -n "$HOOK_EXTRAS_BRANCH" ]
		then
			branch_flag="-b $HOOK_EXTRAS_BRANCH"
		fi
		git clone -q $branch_flag $HOOK_EXTRAS_REPO extras
	fi

	if [ -d $temp_dir/extras ]
	then
		find livecd-rootfs/live-build/ -type d -name '*hooks*' |
			xargs -I {} cp -af extras/* {}
	fi

	cat > mix-old-fashioned <<- EOF
		#!/bin/bash -x
		sudo add-apt-repository -y -u ppa:launchpad/ppa
		sudo apt-get -q update
		sudo apt-get -q install -y launchpad-buildd bzr python-ubuntutools git python3-ubuntutools python3-launchpadlib
		cd livecd-rootfs
		sudo -E ../ubuntu-old-fashioned/old-fashioned-image-build --no-cleanup $chroot_archive_flag $series_flag $@
	EOF

	tar czf ingredients.tar.gz --exclude-vcs ./*
	build-provider-upload $bartender_name ingredients.tar.gz ingredients.tar.gz
	build-provider-run $bartender_name -- tar xf ingredients.tar.gz
)

echo "Mixing drink..."
echo "(See progress in $bartender_name.log)"
build-provider-run $bartender_name -- bash mix-old-fashioned &>$bartender_name.log </dev/null

echo "Pouring $drink_name..."
build-provider-run $bartender_name -- tar czf drink.tar.gz build.output
build-provider-download $bartender_name drink.tar.gz $drink_name
